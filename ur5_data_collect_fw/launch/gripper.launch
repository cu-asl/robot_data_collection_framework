<?xml version="1.0"?>
<launch>
    <arg name="moveit_rviz" default="true"/>
    <arg name="limited" default="true" doc="If true, limits joint range [-PI, PI] on all joints."/>
    <arg name="paused" default="true" doc="Starts gazebo in paused mode"/>
    <arg name="gui" default="true" doc="Starts gazebo gui"/>
    <arg name="transmission_hw_interface" default="hardware_interface/PositionJointInterface"/>
    <arg name="control_pick" default="false"/>
    <arg name="spawn_open" default="" />
    <arg name="spawn_save" default="" />
    <arg unless="$(eval spawn_open == '')" name="arg_open" value="-open $(find ur5_data_collect_fw)/$(arg spawn_open)"/>
    <arg     if="$(eval spawn_open == '')" name="arg_open" value=""/>
    <arg unless="$(eval spawn_save == '')" name="arg_path" value="-fix_path $(find ur5_data_collect_fw)/$(arg spawn_save)"/>
    <arg     if="$(eval spawn_save == '')" name="arg_path" value=""/>

    <!-- startup simulated world -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" >
        <arg name="world_name" value="$(find ur5_data_collect_fw)/worlds/empty_kinect.world"/>
        <arg name="paused" value="$(arg paused)"/>
        <arg name="gui" value="$(arg gui)"/>    
    </include>

    <param name="robot_description" command="$(find xacro)/xacro '$(find ur5_data_collect_fw)/urdf/ur5_3finger.urdf.xacro'
transmission_hw_interface:=$(arg transmission_hw_interface)"/>

    <!-- push robot_description to factory and spawn robot in gazebo  -->
    <node name="spawn_gazebo_model" pkg="gazebo_ros" type="spawn_model" args="-urdf -param robot_description -model robot 
-J shoulder_lift_joint -1.5708 -J elbow_joint 1.5708 -J wrist_1_joint -1.5708 -J wrist_2_joint -1.5708" respawn="false" output="screen"/>

    <include file="$(find ur_gazebo)/launch/controller_utils.launch" />

    <!-- start this controller -->
    <rosparam file="$(find ur_gazebo)/controller/arm_controller_ur5.yaml" command="load"/>
    <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller"
respawn="false" output="screen"/>

    <!-- start end_effector controller -->
    <rosparam file="$(find ur5_data_collect_fw)/config/gripper3f.yaml" command="load"/>
    <node name="gripper_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn gripper3f_controller"      
respawn="false" output="screen"/>

    <include file="$(find ur5_g3f_config)/launch/planning_execution.launch" >
        <arg name="moveit_rviz" value="$(arg moveit_rviz)" />
    </include>
    
    <node pkg="ur5_data_collect_fw" type="spawn_model.py" name="spawn_model" args="$(arg arg_open) $(arg arg_path)"/>
    <node pkg="ur5_data_collect_fw" type="record.py" name="record" args="-video_rgb_topic camera/rgb/image_raw -joint_topic joint_states -bag_topic tf joint_states asl/contact_sensor camera/rgb/image_raw camera/depth/image_raw -pose_record True -contact_topic asl/contact_sensor -video_depth_topic camera/depth/image_raw"/>
    
    <group if="$(arg control_pick)">
        <node pkg="ur5_data_collect_fw" type="control_pick.py" name="control_pick"/>
    </group>
</launch>